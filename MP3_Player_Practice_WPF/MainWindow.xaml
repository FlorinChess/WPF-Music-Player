<Window x:Class="MP3_Player_Practice_WPF.MainWindow" x:Name="BaseWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:MP3_Player_Practice_WPF.MVVM.ViewModel"  
        xmlns:views="clr-namespace:MP3_Player_Practice_WPF.MVVM.View"  
        xmlns:local="clr-namespace:MP3_Player_Practice_WPF" 
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:converters="clr-namespace:MP3_Player_Practice_WPF.Converters"
        xmlns:custom="clr-namespace:HamburgerMenu;assembly=HamburgerMenu"
        mc:Ignorable="d"
        Height="750" Width="1000"
        MinWidth="700" MinHeight="550"
        Background="#333333"
        WindowStyle="None"
        AllowsTransparency="True" d:DataContext="{d:DesignInstance {x:Type viewmodels:MainViewModel}}"
        WindowStartupLocation="CenterScreen"
        Title="{Binding SelectedSong.Name, FallbackValue='WaveZ'}">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="35" ResizeBorderThickness="6"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <converters:SecondsToTimeSpanConverter x:Key="SecondsToTimeSpanConverter"/>
        <converters:VolumeToImageConverter x:Key="VolumeToImageConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!--<Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        Window Outter Border : dropshadow effect
                        <Border x:Name="Container" Padding="{Binding WindowResize,  FallbackValue=6}">
                            <Grid Background="Green">
                                <Border CornerRadius="6"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

    </Window.Resources>

    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Closing" SourceObject="{Binding ElementName=BaseWindow}">
            <behaviors:InvokeCommandAction Command="{Binding OnClosingCommand}" CommandParameter="{x:Null}" />
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>

    <Window.InputBindings>
        <KeyBinding Key="M" Command="{Binding MuteCommand}"/>
        <KeyBinding Key="Space" Command="{Binding PlayPauseCommand}"/>
    </Window.InputBindings>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="taskBarItemInfo1" 
                     ThumbnailClipMargin="80,0,80,140"
                     Description="WaveZ">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo
                    DismissWhenClicked="False"
                    Command="{Binding MuteCommand}"
                    CommandTarget="{Binding ElementName=MuteButton}"
                    Description="Mute"/>
                    <ThumbButtonInfo
                    DismissWhenClicked="False"
                    Command="{Binding PlayPauseCommand}"
                    CommandTarget="{Binding ElementName=PlayPauseButton}"
                    Description="Play"/>
                    <ThumbButtonInfo
                    DismissWhenClicked="False"
                    Command="{Binding NextSongCommand}"
                    CommandTarget="{Binding ElementName=NextSongButton}"
                    Description="Next in Que"/>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    
    <!-- Main Grid -->
    <Grid>
        
        <!--#region Row and Column Definitions -->
        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--#endregion-->
        
        <!-- Custom Window TitleBar : can use ZIndex to bring Grid to foreground for button functionality-->
        <Grid Name="TitleBar"  Grid.ColumnSpan="3" Background="#252525" Height="35">
            <Label Foreground="Gray" Content="WaveZ Prototype" VerticalAlignment="Center" HorizontalAlignment="Left"/>
            <StackPanel WindowChrome.IsHitTestVisibleInChrome="True" VerticalAlignment="Center" HorizontalAlignment="Right" Orientation="Horizontal" Name="WindowControls">
                <Button Focusable="False" Template="{StaticResource ButtonTemplateNoHover}" BorderThickness="0" Foreground="GhostWhite" FontSize="20" Background="Transparent" Height="35" Width="35" Content="-" Name="MinimizeButton"/>
                <Button Focusable="False" Template="{StaticResource ButtonTemplateNoHover}" BorderThickness="0" Foreground="GhostWhite" FontSize="20" Background="Transparent" Height="35" Width="35" Content="+" Name="MaximizeButton"/>
                <Button Focusable="False" Template="{StaticResource WindowCloseButton}" BorderThickness="0" Foreground="GhostWhite" FontSize="20" Background="Transparent" Height="35" Width="35" Content="x" Name="ExitButton"/>
            </StackPanel>
        </Grid>

        <!-- Menu Buttons -->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <DockPanel HorizontalAlignment="Left">
                <CheckBox 
                            x:Name="Hamburger"
                            DockPanel.Dock="Left"
                            Style="{StaticResource HamburgerMenuCheckBox}" 
                            Height="50" Width="50" />
            </DockPanel>
            <custom:HamburgerMenu  
                        Grid.Row="1"
                        OpenCloseDuration="0:0:0.25"
                        Background="#333333"
                        IsOpen="{Binding IsChecked, ElementName=Hamburger}">
                <!-- Hamburger Menu resources -->
                <custom:HamburgerMenu.Resources>
                    <Style TargetType="custom:HamburgerMenuItem">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Padding" Value="6 12" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="18" />
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation 
                                                    Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                    Duration="0:0:0.1" 
                                                    To="#dbdbdb"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation 
                                                    Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                                    Duration="0:0:0.1" 
                                                    To="Transparent"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#7200ca" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="#7200ca" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </custom:HamburgerMenu.Resources>
                <custom:HamburgerMenu.Content>
                    <StackPanel Margin="0 4">
                        <custom:HamburgerMenuItem Command="{Binding NavigateToPlaylistCollection}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <Image 
                                    Source="/Icons/baseline_home_white_24dp.png"
                                    Height="40" Width="40" Margin="2 0"/>
                                <TextBlock 
                                    Text="Home"/>
                            </StackPanel>
                        </custom:HamburgerMenuItem>
                        <custom:HamburgerMenuItem Command="{Binding NavigateToSettings}">
                            <StackPanel Orientation="Horizontal">
                                <Image 
                                    Source="/Icons/baseline_settings_white_24dp.png"
                                    Height="40" Width="40" Margin="2 0"/>
                                <TextBlock
                                    Text="Settings"/>
                            </StackPanel>
                        </custom:HamburgerMenuItem>
                        <custom:HamburgerMenuItem  Command="{Binding NavigateToPlaylist}">
                            <StackPanel Orientation="Horizontal">
                                <Image 
                                            Source="/Icons/baseline_library_music_white_24dp.png"
                                            Height="40" Width="40" Margin="2 0"/>
                                <TextBlock
                                            Text="Playlist"/>
                            </StackPanel>
                        </custom:HamburgerMenuItem>
                    </StackPanel>
                </custom:HamburgerMenu.Content>
            </custom:HamburgerMenu>
        </Grid>

        <!-- Selected Menu -->
        <ContentControl Grid.Row="1" Grid.Column="1" Content="{Binding CurrentViewModel}">
            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type viewmodels:SettingsViewModel}">
                    <views:SettingsView/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewmodels:PlaylistViewModel}">
                    <views:PlaylistView/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewmodels:PlaylistCollectionViewModel}">
                    <views:PlaylistCollectionView/>
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>

        <!-- Music Player -->
        <Grid Grid.Row="2" Grid.ColumnSpan="2" Background="#181818">

            <!--#region Row and Column definitions -->
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <!--#endregion-->

            <Label Padding="4" Margin="10,0" Grid.Column="0" FontSize="18" Foreground="Gray" Content="{Binding SliderPosition, Converter={StaticResource SecondsToTimeSpanConverter}, FallbackValue='00:00:00'}" />
            <Label Padding="4" Margin="10,0" Grid.Column="2" FontSize="18" Foreground="Gray" Content="{Binding TrackLength, Converter={StaticResource SecondsToTimeSpanConverter}, FallbackValue='00:00:00'}" />

            <!-- Track Slider -->
            <StackPanel Grid.Column="1" HorizontalAlignment="Stretch">
                <Slider x:Name="TrackBar" Margin="0,6,0,10"
                        Maximum="{Binding TrackLength}" Minimum="0"
                        Style="{StaticResource Horizontal_Slider}"
                        Value="{Binding SliderPosition}"
                        Thumb.DragStarted="Slider_DragStarted"
                        Thumb.DragCompleted="Slider_DragCompleted">
                </Slider>
            </StackPanel>

            <Grid Grid.Row="1" Grid.ColumnSpan="3" Margin="0 6 0 12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>

                <!-- Selected Song: Name and Artist -->
                <StackPanel Orientation="Vertical"  Margin="10,0,0,0">
                    <!--<Border CornerRadius="25" Background="Transparent">
                        <Image Height="40" Width="40" Source="/Icons/music_note_icon.png"/>
                    </Border>-->
                    <TextBlock TextTrimming="CharacterEllipsis" Padding="2" FontSize="22" Foreground="WhiteSmoke" Text="{Binding SelectedSong.Name, FallbackValue='Selected Song Name'}"/>
                    <TextBlock TextTrimming="CharacterEllipsis" Padding="2" FontSize="16" Foreground="Gray" Text="{Binding SelectedSong.Artist, FallbackValue='Selected Song Artist'}"/>

                </StackPanel>

                <!-- Music Player Buttons -->
                <StackPanel x:Name="MusicPlayerButtons" Grid.Column="1" 
                            Margin="0" Orientation="Horizontal"
                            HorizontalAlignment="Center" VerticalAlignment="Center">

                    <!-- Replay Button -->
                    <Button x:Name="ReplayButton" ToolTip="Replay" 
                            Template="{DynamicResource ButtonTemplateNoHover}"                      
                            Command="{Binding ReplayCommand}" 
                            Style="{StaticResource MusicPlayerButton}">
                        <StackPanel>
                            <Image 
                                Source="/Icons/baseline_repeat_white_24dp.png" 
                                Style="{StaticResource MusicPlayerButtonImage}" 
                                Height="40" Width="40" Cursor="Hand"
                                Opacity="0.5"/>
                        </StackPanel>
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="25"/>
                            </Style>
                        </Button.Resources>
                    </Button>

                    <!-- Previous Song Button -->
                    <Button x:Name="PreviousSongButton" ToolTip="Previous" 
                            Template="{DynamicResource ButtonTemplateNoHover}" 
                            Command ="{Binding PreviousSongCommand}"
                            Style="{StaticResource MusicPlayerButton}">
                        <StackPanel>
                            <Image 
                                Source="/Icons/baseline_skip_previous_white_24dp.png" 
                                Style="{StaticResource MusicPlayerButtonImage}" 
                                Height="40" Width="40" Cursor="Hand"
                                Opacity="0.5"/>
                        </StackPanel>
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="25"/>
                            </Style>
                        </Button.Resources>
                    </Button>

                    <!-- Play/Pause Button -->
                    <Button x:Name="PlayPauseButton" ToolTip="Play/Pause" 
                            Template="{DynamicResource ButtonTemplateNoHover}" 
                            Command="{Binding PlayPauseCommand}"
                            Style="{StaticResource MusicPlayerButton}">
                        <StackPanel>
                            <Image 
                                Source="/Icons/baseline_play_arrow_white_24dp.png"
                                Style="{StaticResource MusicPlayerButtonImage}"
                                Cursor="Hand"
                                Opacity="0.5"/>
                        </StackPanel>
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="25"/>
                            </Style>
                        </Button.Resources>
                    </Button>

                    <!-- Next Song Button -->
                    <Button Template="{DynamicResource ButtonTemplateNoHover}" x:Name="NextSongButton" ToolTip="Next"
                        Command="{Binding NextSongCommand}"
                        Style="{StaticResource MusicPlayerButton}">
                        <StackPanel>
                            <Image 
                                Source="/Icons/baseline_skip_next_white_24dp.png" 
                                Style="{StaticResource MusicPlayerButtonImage}" 
                                Height="40" Width="40" Cursor="Hand"
                                Opacity="0.5"/>
                        </StackPanel>
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="25"/>
                            </Style>
                        </Button.Resources>
                    </Button>

                    <!-- Stop Button -->
                    <Button x:Name="StopButton" ToolTip="Stop"
                            Template="{DynamicResource ButtonTemplateNoHover}"
                            Command="{Binding StopCommand}"
                            Style="{StaticResource MusicPlayerButton}" Cursor="Hand">
                        <StackPanel>
                            <Image 
                                Source="/Icons/baseline_stop_white_24dp.png" 
                                Style="{StaticResource MusicPlayerButtonImage}" 
                                Height="40" Width="40" Cursor="Hand"
                                Opacity="0.5"/>
                        </StackPanel>
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="25"/>
                            </Style>
                        </Button.Resources>
                    </Button>

                </StackPanel>
                
                <!-- Volume Slider -->
                <StackPanel 
                        Grid.Column="2"
                        Orientation="Horizontal" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Center" 
                        Margin="10,0">
                    <Button x:Name="MuteButton" ToolTip="Mute"
                                Template="{DynamicResource ButtonTemplateNoHover}"
                                Command="{Binding MuteCommand}"
                                Style="{StaticResource MusicPlayerButton}"
                                Content="Mute" Cursor="Hand">
                        <!--<StackPanel>
                                -->
                        <!-- TODO: redo images -->
                        <!-- <Image Source="{Binding ElementName= VolumeSlider, Path=Value, Converter={StaticResource VolumeToImageConverter}}" Height="35" Width="35" Cursor="Hand"/> -->
                        <!--
                            </StackPanel>-->

                    </Button>
                    <Slider x:Name="VolumeSlider" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                            Minimum="0" Maximum="100" SmallChange="1"
                            Style="{StaticResource Horizontal_Slider}"
                            Value="{Binding Volume}"
                            Cursor="Hand"/>
                </StackPanel>    
            </Grid>
        </Grid>
    </Grid>
</Window>
